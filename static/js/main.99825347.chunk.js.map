{"version":3,"sources":["components/Star/index.tsx","components/StarsRating/index.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Star","fill","height","viewBox","width","xmlns","d","StarsRating","count","starsToRender","Array","map","_id","nanoid","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"gMAeeA,EAbE,kBACf,sBACEC,KAAK,UACLC,OAAO,KACPC,QAAQ,YACRC,MAAM,KACNC,MAAM,6BALR,UAOE,sBAAMC,EAAE,4EACR,sBAAMA,EAAE,gBAAgBL,KAAK,aCuBlBM,EAvBgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChC,GAAIA,GAAS,GAAKA,EAPO,EAQvB,OAAO,KAGT,IACMC,EADgB,IAAIC,MAAMF,GAAOP,KAAK,MACJU,KAAI,iBAAiB,CAC3DC,IAAKC,kBAGP,OACE,qBAAKC,UAAU,YAAf,SACE,oBAAIA,UAAU,6BAAd,SACGL,EAAcE,KAAI,gBAAGC,EAAH,EAAGA,IAAH,OACjB,6BACE,cAAC,EAAD,KADOA,WCjBJG,EAFH,kBAAM,cAAC,EAAD,CAAaP,MAFH,KCUbQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99825347.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nconst Star: FC = () => (\r\n  <svg\r\n    fill=\"#D3BCA2\"\r\n    height=\"28\"\r\n    viewBox=\"0 0 18 18\"\r\n    width=\"28\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M9 11.3l3.71 2.7-1.42-4.36L15 7h-4.55L9 2.5 7.55 7H3l3.71 2.64L5.29 14z\" />\r\n    <path d=\"M0 0h18v18H0z\" fill=\"none\" />\r\n  </svg>\r\n);\r\n\r\nexport default Star;\r\n","import React, { FC, ReactNode } from 'react';\nimport { nanoid } from 'nanoid';\nimport Star from '../Star';\nimport { StarItem } from 'types';\n\nconst MAX_RATING: number = 5;\n\ninterface Props {\n  count: number;\n}\n\nconst StarsRating: FC<Props> = ({ count }) => {\n  if (count <= 0 || count > MAX_RATING) {\n    return null;\n  }\n\n  const stars: null[] = new Array(count).fill(null);\n  const starsToRender: StarItem[] = stars.map((): StarItem => ({\n    _id: nanoid(),\n  }));\n\n  return (\n    <div className=\"container\">\n      <ul className=\"card-body-stars u-clearfix\">\n        {starsToRender.map(({ _id }: StarItem): ReactNode => (\n          <li key={_id}>\n            <Star />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StarsRating;\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport StarsRating from \"components/StarsRating\";\r\n\r\nconst STARS_COUNT: number = 4;\r\n\r\nconst App = () => <StarsRating count={STARS_COUNT} />;\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}